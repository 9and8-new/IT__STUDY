배열 : 여러 자료Type을 저장하기 위한 자료구조
배열은 순서번호(Index)를 가지고 있고 번호를 통해서 요소값에 접근가능

자바스크립트의 배열은 동적확장이 가능하다

배열함수 : push(마지막 index + 1에 값추가), pop(마지막 index 값 제거)
push는 제일 마지막 위치에 정보를 넣는작업
pop은 제일 마지막 위치 정보를 제거하는 작업

배열함수 : fotEach
배열 내의 모든 요소를 순차적으로 접근하는 반복구문
callback함수(로직을 전달, ()=>{})

filter : 배열내에서 특정 요소만 필터링
arr.filter((요소명)=>{return 조건식})
필터링된 요소만 묶은 배열이 따로 생성

누산 : 누적합, 누적곱... 누적작업
arr.reduce((누적변수,요소명)=>{처리로직},누산변수 초기값)
합을 구하는 누산작업 : .reduce(()=>{},누산변수 초기값) 메서드는 배열의 각 요소에 대해 주어진 리듀서 (reducer) 함수를 실행하고, 하나의 결과값을 반환

배열object 처리 [{},{},{},{}...]
JSON으로 처리되고 공공기간 대부분 90%는 JSON처리방식


재구성 배열.map(()=>{})
mpp : 기존 배열의 새로운 형태의 배열로 재구성(**중요함**)
arr.map((요소명)=>{return 재구성할 요소의 형태})
새로운 배열이 만들어짐
Array 인스턴스의 map() 메서드는 호출한 배열의 모든 요소에 주어진 함수를 호출한 결과로 채운 새로운 배열을 생성
--------------------------------------------------------------------------------------------------------------------------
08. ProtoType(07/22)

Object 객체 : 객체를 다루는 기본함수 제공
object자료형과는 별개로 미리 만들어진 객체

const obj = {"name":"홍길동","age":55};
console.log("obj",typeof obj);
console.log("null",typeof null)

console.log(Object.keys(obj)); // obj의 key를 배열로 반환
console.log(Object.values(obj)); // obj의 values를 배열로 반환
console.log(Object.entries(obj)); // 열거가능한 속성([key:value])형태의 배열로 반환

   // Object.prototype : 객체가 상속을 구현하는데 사용되는 매커니즘, Object객체 내에 구성
        // =================================================
        //    Object.prototype
자바스크립트의 모든 객체가 상속하는 프로토타입 체인의 최상위에 있는 객체입니다. 
따라서 Object.prototype에는 다양한 함수들이 정의되어 있습니다. 
일부 중요한 함수들은 다음과 같습니다:

toString(): 객체를 문자열로 변환하여 반환합니다.
hasOwnProperty(): 객체가 특정 속성을 직접 소유하고 있는지 여부를 확인합니다.
isPrototypeOf(): 객체가 다른 객체의 프로토타입 체인에 존재하는지 여부를 확인합니다.
valueOf(): 객체의 원시 값 표현을 반환합니다.
toLocaleString(): 객체를 지역화된 문자열로 변환하여 반환합니다.
propertyIsEnumerable(): 특정 속성이 열거 가능한 속성인지 여부를 확인합니다.
constructor: 객체를 생성한 생성자 함수를 참조합니다.

map과 filter는 확실히 알아야 한다.



00_INFO
산술 연산자 (Arithmetic Operators):

+ (덧셈)
- (뺄셈)
* (곱셈)
/ (나눗셈)
%(나머지)  - 짝홀수 구분 , 배수구분 , 끝자리수 확인 , 수범위 -1까지제한
++ (증가)
-- (감소)

parseInt : 지수부분만 받고 나머지 버린다는 함수

산술연산자 + - * / %(짝홀수, 배수, 수의범위제한,자리수)

대입연산자: 공간 = 값(우선처리)

복합대입연산자 +=,-=,*=,/=,%=

증감연산자 ++a, a==, --a, a--

비교연산자 >, >=, < , <= ,== ,!= ,===

논리연산자(!) : &&, ||, !

삼항연산자 : 조건식? 참인경우실행 : 거짓인경우 실행문자

============================
절차지향		+ 	객체지향문법?
			java

흐름제어문		-
if / while

*중요도*
함수 *** 3/5
이벤트처리 ***** 5/5
NODE - CRUD **** 4/5
동기비동기 개념숙지
================== 03.JS -> 05.함수 -> 

상 수
변 수
함 수에 수는 선저장.
수(data)를 받아 처리하는 논리적 공간 : 함수  

========오늘한 내용=============
TYPE 자바의 상속과 유사
-프로토타입
연산자 자바에서 한번더함
-산술/대입/복합대입/비교/논리/삼항/증감
흐름제어
-IF/WHILE/FOR
함수
-기본구조/가변인자/HOISTING