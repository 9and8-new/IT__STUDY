package Ch02;

public class C04변수_자료형 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		//-------------------------------------
		//정수 int - 4byte 정수 부호 O
		//------------------------------------
//		int n2 = 173;			//10진정수값
//		int n3 = 0255;			//8진수
//		int n4 = 0xad;			//16진수
//		System.out.printf("%d %d %d\n", n2,n3,n4);
		
		//-------------------------------------
		//정수 byte - 1byte 정수 부호 O
		//------------------------------------
//		byte n5 = (byte)-129;
//		byte n6 = -30;
//		byte n7 = 30;
//		byte n8 = 127;
//		byte n9 = (byte)129;
//		System.out.println("n5 : " + n5);
//		System.out.println("n9 : " + n9);
//		System.out.println(0b10101101); //?
//		System.out.println(Integer.toBinaryString(-129)); //?
		
		//-------------------------------------
		//정수 short - 2byte 정수 부호 O | char-2byte정수 부호x(양수만)
		//------------------------------------
		char n1 = 65535; //(0~2^16-1)  (0~65535)
		short n2 = 32767; //(-2^15 ~ +2^15-1)(-32768 ~ + 32767)
		
		char n3 = 60000;
		short n4 = (short)n3; //문제발생... 왜??
		
		System.out.printf("%d\n", n4);
		
		//-------------------------------------
		//정수 long-8byte 정수 부호 O
		//------------------------------------
		
//		long n1 = 10000000000;
//		long n2 = 20; //L,l (리터럴접미사) : long 자료형 사용하여 값 // 접미사는 대소문자 상관이 없다.
//		
//		long n3 = 10000000000; //문제발생.. 왜?
//		long n4 = 10000000000;
		
		//------------------------------------
		//유리수와 무리수의 통칭
		//소숫점이하값을 가지는 수 123.456
		//float : 4byte 실수(6-9자리)
		//double : 8byte 실수(15-18자리), 기본자료형
		
		//정밀도 확인
//		float n1 = 0.123456789123456789F; //f,F : float형 접미사
//		double n2 = 0.123456789123456789;
//		
//		System.out.println(n1);
//		System.out.println(n2);
		
		//오차 확인
//		float num = 0.1F;
//		for(int i=0; i<=1E5;i++) {
//			num=num+0.1F;
//			System.out.println(i);
//		}
//		System.out.println("num :" + num);
	
		//------------------------------------
		//단일문자 char 2byte 정수
		//------------------------------------
		char ch1 = 'a';
		System.out.println(ch1);
		System.out.println((int)ch1);
		System.out.println(Integer.toBinaryString(ch1));
		
		System.out.println("-------------------");
		char ch2 = 98;
		System.out.println(ch2);
	}

}
